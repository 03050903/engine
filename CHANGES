--------------------------
PlayCanvas Runtime Changes 
--------------------------

-------
v0.24.0
-------
Fix audio in Firefox, remove setSource() method. Use play(entity, name) now.
Added audionode.js shim for Firefox
[FIX] Skeleton nodes with one keyframe now work properly with addTime function.
Added pc.math.quat.copy.
Add the ability to deactivate an animation on load. The animation component can additionally be queried to see if an animation is actually currently playing.
[FIX] Fix the case where an entity's serialized boolean false value causes the value to be incorrectly read from the component data.
Add support for looping and volume for audio sources
[FIX] guessResponseType method correctly handles urls with queries and fragments

-------
v0.23.0
-------
* Fixes to allow PlayCanvas to run in Opera 12
* Added support for point light attenuation
* Light enable -> setEnabled
* Improved point light handling in the framework
* Added material plugin for shadowmap program generation
* New AudioSource Component using webkitAudioContext to play sounds (audio is disabled on unsupported browsers)
* [FIX] Fix problem where material shininess can be zero giving undefined results

-------
v0.22.0
-------
* Added a fixed time step update function to the framework.
* Only override format of image elements in Texture2D.prototype.setSource.
* Added a variable rate delta time for application.
* [FIX] Alpha test now actually works as a render state.

-------
v0.21.0
-------
* The Blinn-Phong program now uses the standard Phong lighting equation.
* [FIX] Fixed probable bug in CLOSE_ENTITY message which could be closing the wrong entity.
* Added send() and broadcast() methods to ScriptComponentSystem.
* Added runtime support for specular factor maps which multiply either the specular material color or the assigned specular map.

-------
v0.20.0
-------
* [FIX] Skinning should now work in all cases.
* [FIX] Fix for some keys (e.g. 'n' and 'z') not working in input handler.

-------
v0.19.0
-------
* Added support for fetching binary data in pc.net.http
* Added pc.path.getExtension(filename) function

-------
v0.18.1
-------
* [FIX] PickComponentSystem.addShape was referencing an undefined variable 'data'
* [FIX] Missing var definitions were assigning to globals

-------
v0.18.0
-------
* Namespace logging functions
* Update primitive component to create models and add them to the scene to render
* Move picking functionality into the Scene API
* Picking API is removed from pc.fw, use pc.scene.Picker
* Enable picking of primitives
* [FIX] bug when loading multiple copies of the same skin when skin partitioning is active
* [FIX] Viewport of back buffer render targets now automatically resize
* [FIX] Updated references to old light API on model load

-------
v0.17.1
-------
* Fixed GLSL picking broken in v0.17.0

-------
v0.17.0
-------
* Fixed picking for skinned geometry
* Added guard to check of labels array is present in entity data. (It isn't in some older entities)

-------
v0.16.1
-------
* AssetResourceHandler supplies a url prefix so that if the code is hosted on a site other than platform.playcanvas.com it can still work

-------
v0.16.0
-------
* Added blending support to animation component.

-------
v0.15.0
-------
* Changed pc.gfx.Device#setCurrent to a static function
* Removed pc.gfx.Device#stop
* Fix for Designer, Pick Components weren't working
* Fix for Point Lights not working
* Fix removed old code from cubemap

-------
v0.14.1
-------
* Fix for pc.fw.Application still referencing old _camera variable
* Fix for Bloom Component still referencing old _camera variable
* Fix for SkyBox Component still referencing old _camera variable 
 
-------
v0.14.0
-------
* Replaced pop() and push() in CameraComponentSystem with setCurrent()

-------
v0.13.1
-------
* Fix mouse down event for left mouse button. 

-------
v0.13.0
-------
* Added support for preventDefault and stopPropagation in pc.input.Keyboard
* Updated components to initialize the defaults correctly
* Auto-register all the shader generators (so the user doesn't have to)

-------
v0.12.0
-------
* hierarchy is synced in Application.start() before first update tick
* Added pc.input.MouseEvent
* Removed Mouse drag event
* Removed legacy references to graph namespace
** pc.graph.procedural is now pc.scene.procedural
** pc.graph.materialplugin is now pc.scene.materialplugin
* Removed planereflection component

------
v0.7.0
------

* Added first pass at an animation component. Just loads/runs a single animation for now.
* Added new render state management API, introducing the idea of global and local state.
* Use the alpha channel in a specular map as the per-pixel shininess value.
* Fix for Phong GLSL when no lights are activated.
* Reworked parallax mapping. Effect now activates if an alpha channel is found in the normal map (containing a height map).
* Updated parallax effect in shadowmap sample.
* Updated skybox component to work with any camera clip planes. Also now just maintains a geometry instead of a mesh.
* Fixed transparency for Maya FBX exports.
* Added Visualizer launcher script for Maya (written in Python rather than MEL).
* Added runtime support for emissive maps.

------
v0.6.0
------

* Added CHANGES file
* [FIX] gizmo and pick components no longer deleted when components are updated, should be done manually for now
* Added pc.dom namespace for DOM related code
* Updated artwork to all use the correct system units (inches).
* Stop deserializing entities from message as they are transferred as normal javascript object now
* Changed reference from _id to resource_id in entity loader to support new Corazon format
* Add resource_id to Entity to support new Corazon format
* [FIX] Light component correctly disables light node when it is deleted
* Added skeleton docs to pc.gfx.Texture.
* Updated pc.gfx.Texture to be a little cleaner and more versatile (now handles canvas, video and image elements as well as byte pixel arrays).
* Fleshed out docs for pc.gfx.Texture.


------
v0.5.0
------

* ScriptLoader replaces ResourceLoader object
* Added toolsRender and toolsUpdate methods to Components
* Better rendering for directional lights in the Designer.
* Enable backface culling in the engine by default.
* Model and Camera components to be deleted correctly.
* Added support for scale in animation keyframes.
* All artwork is now generated as 1 unit equalling 1 meter.
* Tweaks to Ferrari demo assets.
* Changed pc.graph.Cameras default clip planes to work better for worlds scaled to meters.
* Stop FACT from physically loading texture images.
* Handle relative paths which are actually absolute paths on other drives.
* Integrated ImageMagick into FACT.
* Upgraded some deprecated FBX functions in FACT.
* Added backface culling option and a stats panel to Visualizer.
* Frame loaded model with the default camera in Visualizer.
* Update Visualizer launcher to only call FACT (Python commands stripped).
* Fix initial camera offset in Visualizer.
* Write PNGs instead of JPG if non-web format textures have an alpha channel.
* Updated JSON format to split out opacity into new uniform.